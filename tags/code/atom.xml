<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Marcelo Santos - code</title>
    <subtitle>Um pouco de Tudo porAqui...</subtitle>
    <link href="https://marcelosanto.github.io/tags/code/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://marcelosanto.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-11-04T00:00:00+00:00</updated>
    <id>https://marcelosanto.github.io/tags/code/atom.xml</id>
    <entry xml:lang="en">
        <title>Comparando Declaração de Variáveis e Impressão no Console em C, Rust, Zig e Kotlin</title>
        <published>2024-11-04T00:00:00+00:00</published>
        <updated>2024-11-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://marcelosanto.github.io/comparando-variaveis/" type="text/html"/>
        <id>https://marcelosanto.github.io/comparando-variaveis/</id>
        
        <summary type="html">&lt;p&gt;Linguagens de programação têm diferentes abordagens para lidar com a declaração de variáveis e a impressão de dados no console. Neste artigo, veremos um comparativo básico de como fazer essas tarefas em C, Rust, Zig e Kotlin.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Rust e Iteradores: Descomplicando o Poder da Iteração em Alta Performance</title>
        <published>2022-11-19T00:00:00+00:00</published>
        <updated>2022-11-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://marcelosanto.github.io/rust-interadores/" type="text/html"/>
        <id>https://marcelosanto.github.io/rust-interadores/</id>
        
        <summary type="html">&lt;p&gt;Rust é uma linguagem conhecida por sua segurança, desempenho e expressividade. Uma de suas características mais poderosas é o sistema de &lt;strong&gt;iteradores&lt;&#x2F;strong&gt;, que permite processar coleções de dados de maneira eficiente e declarativa. Neste artigo, vamos explorar o que são iteradores, como usá-los em Rust e como eles podem ser aplicados para resolver problemas comuns de programação.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
